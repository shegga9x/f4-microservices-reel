package com.f4.reel.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReelAllPropertiesEquals(Reel expected, Reel actual) {
        assertReelAutoGeneratedPropertiesEquals(expected, actual);
        assertReelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReelAllUpdatablePropertiesEquals(Reel expected, Reel actual) {
        assertReelUpdatableFieldsEquals(expected, actual);
        assertReelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReelAutoGeneratedPropertiesEquals(Reel expected, Reel actual) {
        assertThat(actual)
            .as("Verify Reel auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReelUpdatableFieldsEquals(Reel expected, Reel actual) {
        assertThat(actual)
            .as("Verify Reel relevant properties")
            .satisfies(a -> assertThat(a.getUserId()).as("check userId").isEqualTo(expected.getUserId()))
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getVideoUrl()).as("check videoUrl").isEqualTo(expected.getVideoUrl()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReelUpdatableRelationshipsEquals(Reel expected, Reel actual) {
        // empty method
    }
}
